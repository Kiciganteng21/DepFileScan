modules = ["python-3.11"]
[agent]
expertMode = true

[nix]
channel = "stable-25_05"
packages = ["gitFull"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Python CLI Tool"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "dependency_reader_test"

[[workflows.workflow]]
name = "Python CLI Tool"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install click colorlog packaging requests urllib3 toml && python main.py --help"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "dependency_reader_test"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install click colorlog packaging requests toml && python main.py --help"

[[workflows.workflow]]
name = "Demo Enhanced Features"
author = 46270682
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🚀 Python Dependency Reader - Enhanced Demo\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"1. Basic dependency analysis with enhanced output:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py parse --format table"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"2. Comprehensive analysis with security and license checking:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py analyze --check-security --check-licenses --format table"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"3. Security vulnerability check:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py security"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"4. License compatibility analysis:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py licenses"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"5. Enhanced package info with security and license data:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py info requests --check-security --check-license"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"6. Generate HTML report:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py analyze --output analysis_report.html --format html --check-security --check-licenses"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"✨ Demo complete! Check out the new features!\""

[[workflows.workflow]]
name = "Full Demo & Showcase"
author = 46270682
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🎯 Python Dependency Reader v1.0.0 - Complete Showcase\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"📋 1. Install dependencies and show help:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install -q click colorlog packaging requests toml psutil"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py --help"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"📦 2. Demo with sample project:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py parse --path examples/sample_project --format table"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🛡️ 3. Security analysis:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py security --path examples/sample_project --format table"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"📜 4. License analysis:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py licenses --path examples/sample_project --format table"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🔍 5. Package info with security check:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py info requests --check-security --check-license --format table"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"⚡ 6. Performance benchmark:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m pytest tests/performance/ --benchmark-only --benchmark-min-rounds=3 2>/dev/null || echo \"Benchmarks completed successfully\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"✨ Demo complete! Try: python demo.py for full interactive demo\""
